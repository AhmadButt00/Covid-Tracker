{"version":3,"sources":["components/card/card.component.jsx","pages/OverallStats/overall.component.jsx","components/statscard/statscard.component.jsx","pages/TopthreeStats/topthree.component.jsx","pages/Home/home.component.jsx","components/countrylist/countrylist.component.jsx","components/searchbox/searchbox.component.jsx","components/countrylist/countrylist.container.jsx","pages/Countries/countries.component.jsx","App.js","serviceWorker.js","index.js"],"names":["numberWithCommas","x","toString","pattern","test","replace","Card","title","amount","className","src","alt","border","width","height","override","css","OverAll","state","data","loading","fetch","then","response","json","setState","this","size","color","cases","deaths","recovered","React","Component","StatsCard","total","active","death","number","position","parseInt","Topthree","isLoading","topThreeArr","slice","map","obj","i","key","country","Home","CountryList","today","deathstoday","critical","SearchBox","props","type","placeholder","onChange","onSearchChange","CountrylistContainer","event","searchField","target","value","filteredCountries","filter","toLowerCase","includes","Fragment","todayCases","todayDeaths","Countries","App","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.798f64bd.chunk.js","sourcesContent":["import React from \"react\";\nimport './card.styles.css';\n\nfunction numberWithCommas(x) {\n    x = x.toString();\n    let pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n\nconst Card = ({title, amount}) => {\n    return (\n        <div className=\"card\">\n            <h3 className=\"title\">{title}</h3>\n            <div className=\"bar\">\n                <div className=\"emptybar\"></div>\n                <div className=\"filledbar\"></div>\n            </div>\n            <div className=\"circle\">\n                <img src=\"https://i.ibb.co/yRj69ZR/virus.png\" alt=\"virus\" border=\"0\" width=\"40px\" height=\"40px\">\n                </img>\n                <h3>\n                    {numberWithCommas(amount)}\n                </h3>\n            </div>\n        </div>\n    );\n};\n\nexport {Card, numberWithCommas};\n","import React from \"react\";\nimport './overall.styles.css';\nimport {Card} from '../../components/card/card.component';\nimport { css } from \"@emotion/core\";\nimport BeatLoader from \"react-spinners/ClipLoader\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: silver;\n`;\n\nclass OverAll extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            data: '',\n            loading : true\n        }\n    }\n    componentDidMount(){\n        fetch('https://coronavirus-19-api.herokuapp.com/all')\n            .then(response => response.json())\n            .then(response => this.setState({\n                data : response,\n                loading : false\n            }))\n    }\n    render() {\n        const {data, loading} = this.state;\n        if(!loading) {\n            return (\n                <div className=\"overall-container\">\n                    <Card title = \"Total Cases\" amount={data.cases}/>\n                    <Card title = \"Deaths\" amount={data.deaths}/>\n                    <Card title = \"Recovered\" amount={data.recovered}/>\n                </div>\n\n            );\n        }\n        else\n            return  <div className=\"overall-container\">\n                <BeatLoader\n                    css={override}\n                    size={50}\n                    color={\"#123abc\"}\n                    loading={this.state.loading}\n                />\n            </div>\n    }\n}\n\nexport default OverAll","import React from \"react\";\nimport './statscard.styles.css'\nimport {numberWithCommas} from \"../card/card.component\";\n\nconst StatsCard  = ({title,total, active, death ,number}) => {\n    let position = parseInt(number);\n    position = position +1;\n    return(\n        <div className=\"stats-card\">\n            <h3>{title} #{position}</h3>\n            <p>Total: {numberWithCommas(total)}</p>\n            <p>Active: {numberWithCommas(active)}</p>\n            <p>Deaths: {numberWithCommas(death)}</p>\n        </div>\n    )\n}\nexport default StatsCard","import React from \"react\";\nimport StatsCard from \"../../components/statscard/statscard.component\";\nimport './topthree.styles.scss'\nclass Topthree extends React.Component{\n    constructor() {\n        super();\n        this.state= {\n            data: '',\n            isLoading: true\n        }\n    }\n    componentDidMount() {\n        fetch('https://coronavirus-19-api.herokuapp.com/countries')\n            .then(response => response.json())\n            .then(response => this.setState({\n                data: response,\n                isLoading: false\n            }))\n    }\n\n    render() {\n        const {isLoading, data} = this.state;\n        let topThreeArr = data.slice(0,3);\n        if(!isLoading){\n            return (\n                <div className=\"stats-container\">\n                    {\n                        topThreeArr.map((obj, i) => (\n                            <StatsCard key={i} title={obj.country} total={obj.cases} active={obj.active} death={obj.deaths} number={i}/>\n                        ))\n                    }\n                </div>\n            )\n        }\n        else\n        {\n            return null;\n        }\n    }\n}\nexport default Topthree","import React from 'react';\nimport './home.component.css'\nimport OverAll from \"../OverallStats/overall.component\";\nimport Topthree from \"../TopthreeStats/topthree.component\";\n\nfunction Home() {\n    return (\n        <div className=\"App\">\n            <OverAll/>\n            <Topthree/>\n        </div>\n    );\n}\n\nexport default Home;\n","import React from \"react\";\nimport './countrylist.styles.css';\n\nconst CountryList = ({country, total, today, active, deaths, deathstoday, recovered,critical}) => {\n    return (\n        <li>\n            <div className=\"list-item\">\n                <h3>{country}</h3>\n                <p>Cases {total} | Today {today} | Active {active}</p>\n                <p>Deaths {deaths} | Today {deathstoday}</p>\n                <p>Recovered {recovered} | Critical {critical}</p>\n            </div>\n        </li>\n    )\n};\nexport default CountryList;","import React from 'react';\n\nimport './searchbox.styles.css'\n\nexport const SearchBox = props => (\n    <input\n        className='search-box'\n        type='search'\n        placeholder='Search Country'\n        onChange={props.onSearchChange}\n    />\n);","import React from \"react\";\nimport CountryList from \"./countrylist.component\";\nimport './countrylist.styles.css'\nimport {SearchBox} from \"../searchbox/searchbox.component\";\n\nclass CountrylistContainer extends React.Component{\n    constructor() {\n        super();\n        this.state ={\n            data: '',\n            isLoading: true,\n            searchField: ''\n        }\n    }\ncomponentDidMount() {\n        fetch(\"https://coronavirus-19-api.herokuapp.com/countries\")\n            .then(response => response.json())\n            .then(response => this.setState({\n                data: response,\n                isLoading: false\n            }))\n}\n    onSearchChange = event => {\n        this.setState({ searchField: event.target.value });\n    };\n\n    render() {\n        const {data, isLoading, searchField} = this.state;\n        if(!isLoading){\n            const filteredCountries = data.filter(obj =>\n                obj.country.toLowerCase().includes(searchField.toLowerCase())\n            );\n            return (\n              <React.Fragment>\n                  <div className=\"searchBox\">\n                      <SearchBox onSearchChange={this.onSearchChange} />\n                  </div>\n                  <ul className=\"list-container\">\n                      {\n                          filteredCountries.map((obj, i) => (\n                              <CountryList key={i} country={obj.country} total={obj.cases} today={obj.todayCases} active={obj.active} deaths={obj.deaths} deathstoday={obj.todayDeaths} critical={obj.critical} recovered={obj.recovered}/>\n                          ))\n                      }\n                  </ul>\n              </React.Fragment>\n            );\n        }\n        else return null;\n    }\n}\nexport default CountrylistContainer","import React from \"react\";\nimport CountrylistContainer from \"../../components/countrylist/countrylist.container\";\n\nconst Countries = () => {\n    return(\n        <div>\n            <CountrylistContainer/>\n        </div>\n    )\n}\nexport default Countries","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Home from \"./pages/Home/home.component\";\nimport Countries from \"./pages/Countries/countries.component\";\n\nfunction App() {\n  return (\n      <Router>\n       <div className=\"header\">\n             <span>\n              <h2>COVID-19 DASHBOARD</h2>\n         </span>\n       </div>\n          <div className=\"main\">\n              <div>\n                  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                      <ul className=\"navbar-nav mr-auto\">\n                          <li><Link to={'/'} className=\"nav-link active\"> Home </Link></li>\n                          <li><Link to={'/countries'} className=\"nav-link\">Countries</Link></li>\n                      </ul>\n                  </nav>\n              </div>\n              <Switch>\n                  <Route exact path='/' component={Home} />\n                  <Route path='/countries' component={Countries}/>\n              </Switch>\n          </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n   <BrowserRouter>\n       <App />\n   </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}